--------------------
Magic Carpet 2 Notes
--------------------



TODO:
~- ~- ~- ~- ~- ~- ~- ~- ~-
-  ~  -  ~  -  ~  -  ~
- implement "stop" function for each active class 
- verify that entire system can be "started" and "stopped"
- move texture loading sequence into game class to make renderer more generic
-  ~  -  ~  -  ~  -  ~
-  ~  -  ~  -  ~  -  ~
- fix issue with coordinate system being off
- make it possible to fit a sprite vertically to the screen (for the background)
- implement both X and Y scaling of spinner textures from preset tables 
- remove pitch bend offset and implement it elsewhere 
        (figure out what pitchbend default value should really be, and if we not doing midi, do we need it at all?)
-  ~  -  ~  -  ~  -  ~
-  ~  -  ~  -  ~  -  ~
- set up mixer callback structure without actually mixing yet
-  ~  -  ~  -  ~  -  ~
- get looping playback working on channels 2 and 3
- have binaural play on channel 1 (I think this just plays straight but has tremolo and pitch modulation)
- implement actual mixing in mixer
- implement reading levels from audio setting tables
-  ~  -  ~  -  ~  -  ~
- get FPS limit working on both iOS and RPi 
-  ~  -  ~  -  ~  -  ~
- get Windows build working
-  ~  -  ~  -  ~  -  ~
- add namespace
- check for any memory problems
- implement exceptions and error handling
- clean up everything
- test on raw RPi system
- finish readme.md (include build instructions)
-  ~  -  ~  -  ~  -  ~
-  ~  -  ~  -  ~  -  ~
. eliminate warnings when building ujpeg and stb_vorbis
. make dedicated GIF and/or video for readme.md
. figure out why random isn't that random
. record menu sound from original app
. implement original menu sound
. get rid of status bar when first loading on iOS
. implement tremolo
. implement vibrato
. implement or figure out VSync support on RPi
. improve accuracy of spinner modes and movementvcxprof
. implement rendering to texture
. implement creep jump function 
. add flipped double image to menu background
. implement zoom/sound blip in menu
. fix odd color in red menu spinner
. implement sound buttons
. get Android build working
. implement mute mode
. implement instrument mode
-  ~  -  ~  -  ~  -  ~
~- ~- ~- ~- ~- ~- ~- ~- ~- 




~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ +
DONE:
x plan project file structure
x determine which audio capabilities are required
x set up initial C++ files
x set up project files for RPi/SDL
x set up project for iOS
x get display proof of concept working on RPi
x get display proof of concept working on iOS
x figure out beginning app structure for initialization, spinner array, and rendering
x figure out how to deal with orientation
x get 60fps callback working
x port spinner array
x review mc_util #includes to remove unnecessary includes
x make spinners a class
x make spinners able to draw themselves, or at least able to provide all data necessary for drawing?
x port texture loading
x fix reversed screen height/width
x load all textures
x make textures load from a list
x port spinner renderer
x port fade in/out
x figure out how preset is first loaded when menu is exited in original code
x port preset loader
x get audio working
x get OGG audio file decoding and playing
x port size fluctuations
x port rotation and rate fluctionations
x fix the 3 JPEGs that won't load
x update iOS icon and launch screen
x port preset phase cycler
x implement background color
x implement slow spinup of main spinners when menu starts
x implement fixed tap with release to start from menu
x verify that background color is the same as original
x make touch keep track of total movement
x make it so that there's just one texture load list for spinner, buttons, and background
x apply menu fade-in to sprite sizes on the game-side instead of the render-side
x make application and renderer agnostic to game variables (menu mode, etc)
x rename "spinners" class to "sprites" to make it more clear and reusable
x separate "game" class into game_controller, game_screen, menu_screen
x get background thread proof of concept working
x join thread in destructor 
x set up two source buffers
x load binaualal into source buffer 1
x have menu just play binaural (or maybe try manually making menu sound with original sin() equation)
x auto-load correct file into buffer 2 in thread in realtime
x disable moving of the menu wheel after starting
x set up semaphore
x randomize starting spinner
x make menu auto-select the current spinner after timeout 
x move libraries to lib
x review and clean up makefile
x fix bug where it sometimes loads the incorrect music 
x verify use of consts
x clean up gitignore
~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ + 


