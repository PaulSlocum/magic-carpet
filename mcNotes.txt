--------------------
Magic Carpet 2 Notes
--------------------



TODO:
~- ~- ~- ~- ~- ~- ~- ~- ~-
-  ~  -  ~  -  ~  -  ~
- remove pitch bend offset and implement it elsewhere (figure out what pitchbend default value should really be, and if we not doing midi, do we need it at all?)
-  ~  -  ~  -  ~  -  ~
- set up background OGG file loader
- figure out audio system (how many channels? what's on each channel? 
- figure out how to implement multiple channels
- port audio system
-  ~  -  ~  -  ~  -  ~
- record menu sound from original app
- implement menu sound
-  ~  -  ~  -  ~  -  ~
- fix issue with coordinate system being off
- make it possible to fit a sprite vertically to the screen (for the background)
-  ~  -  ~  -  ~  -  ~
- get Android or Windows build working
-  ~  -  ~  -  ~  -  ~
- add namespace
- clean up and improve makefile
- replace "int" "short" "long" with specific with Int types (Uint8?)
- implement exceptions and error handling
- consider what would be required to expand the example into a larger game or interactive program
- verify use of consts
- review other C++ best practices
- clean up everything
- test on raw RPi system
- finish readme.md
- make GIF and/or video for readme.md
-  ~  -  ~  -  ~  -  ~
-  ~  -  ~  -  ~  -  ~
. implement tremolo
. implement vibrato
. implement or figure out VSync support on RPi
. improve accuracy of spinner modes and movementvcxprof
. implement rendering to texture
. implement both X and Y scaling of spinner textures 
. implement creep jump function 
. add flipped double image to menu background
. implement zoom/sound blip in menu
. fix odd color in red menu spinner
. implement sound buttons
. implement mute mode
. implement instrument mode
-  ~  -  ~  -  ~  -  ~
~- ~- ~- ~- ~- ~- ~- ~- ~- 




~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ +
DONE:
x plan project file structure
x determine which audio capabilities are required
x set up initial C++ files
x set up project files for RPi/SDL
x set up project for iOS
x get display proof of concept working on RPi
x get display proof of concept working on iOS
x figure out beginning app structure for initialization, spinner array, and rendering
x figure out how to deal with orientation
x get 60fps callback working
x port spinner array
x review mc_util #includes to remove unnecessary includes
x make spinners a class
x make spinners able to draw themselves, or at least able to provide all data necessary for drawing?
x port texture loading
x fix reversed screen height/width
x load all textures
x make textures load from a list
x port spinner renderer
x port fade in/out
x figure out how preset is first loaded when menu is exited in original code
x port preset loader
x get audio working
x get OGG audio file decoding and playing
x port size fluctuations
x port rotation and rate fluctionations
x fix the 3 JPEGs that won't load
x update iOS icon and launch screen
x port preset phase cycler
x implement background color
x implement slow spinup of main spinners when menu starts
x implement fixed tap with release to start from menu
x verify that background color is the same as original
x make touch keep track of total movement
x make it so that there's just one texture load list for spinner, buttons, and background
x apply menu fade-in to sprite sizes on the game-side instead of the render-side
x make application and renderer agnostic to game variables (menu mode, etc)
x rename "spinners" class to "sprites" to make it more clear and reusable
x separate "game" class into game_controller, game_screen, menu_screen
~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ + ~~ + 


